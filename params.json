{"name":"Sam's iOS","tagline":"","body":"### UIView's Animating Unexpectedly in Frank Tests \r\n\r\n#### Background\r\nI recently ran into an issue when running Frank automation tests after adding a UIRefreshControl to a UITableViewController. The issue was being caused by UIRefreshControl, which is continuously animating, even when it is not visible.\r\n\r\n#### Problem\r\nA view in the view hierarchy is causing `wait_for_nothing_to_be_animating` to timeout and therefore fail the rest of the test.\r\n\r\n#### Diagnosis\r\nUsing `frank console` I identified that the issue is being caused by an UIView that is animating unexpectedly by running: \r\n`frankly_map \"view\", \"isAnimating\"`\r\n\r\nThis will return an array of `BOOL` variables. If this array contains a `True` then you have a view that is still animating. \r\n\r\nNext, run `frankly_map \"view\", \"description\"` which will list all views within the view hierarchy. Items that have an `animations` dictionary are likely to be animating. \r\n\r\nThe output I got when inspecting UIRefreshControl was: \r\n`\"<_UIRefreshControlModernReplicatorView: 0x8bab6e0; frame = (0 0; 100 100); animations = { instanceCount=<CABasicAnimation: 0x8bae360>; opacity=<CABasicAnimation: 0x8ba6910>; }; layer = <CAReplicatorLayer...\"`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}