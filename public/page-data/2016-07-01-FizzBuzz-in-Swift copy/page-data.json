{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016-07-01-FizzBuzz-in-Swift copy/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"498bd730-ab5a-59b2-87ec-68be1eaf0ac7","excerpt":"FizzBuzz is a classic engineering interview problem. All software engineers should know a solution to this problem. Here’s why you should know it and be able to…","html":"<h1><code class=\"language-text\">3=&#39;Fizz&#39; 5=&#39;Buzz&#39; 15=&#39;FizzBuzz&#39;</code></h1>\n<p>FizzBuzz is a classic engineering interview problem. All software engineers should know a solution to this problem. Here’s why you should know it and be able to solve it.</p>\n<p>FizzBuzz is often used to quickly filter out candidates from the interview process and evaluate initial reasoning skills. If you fail to solve FizzBuzz, the odds are going to be against you progressing further.</p>\n<h3>The problem</h3>\n<p>The <a href=\"https://en.wikipedia.org/wiki/Fizz_buzz\">FizzBuzz problem</a> will usually look something like this:</p>\n<blockquote>\n<p>Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.</p>\n</blockquote>\n<h3>Breaking down the problem into subproblems</h3>\n<p>By reading the problem, we can deduce that there are four different cases to solve, three of which require the test: “Is <code class=\"language-text\">X</code> a multiple of <code class=\"language-text\">Y</code>“.</p>\n<h4>The multiples problem</h4>\n<p>3/4 cases require a solution to the problem: “Is <code class=\"language-text\">X</code> a multiple of <code class=\"language-text\">Y</code>“.</p>\n<p>This is solved using the modulo operator <code class=\"language-text\">%</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">If X modulo Y equals 0, then Y is a multiple of X.</code></pre></div>\n<h4>Sub problems</h4>\n<ol>\n<li>Print <code class=\"language-text\">n</code> when it is <strong>not a multiple of 3 <em>or</em> 5</strong>.</li>\n<li>\n<p>Print <strong>“Fizz”</strong> when <code class=\"language-text\">n</code> is a <strong>multiple of 3 <em>but not</em> 5</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">n <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></code></pre></div>\n</li>\n<li>\n<p>Print <strong>“Buzz”</strong> when <code class=\"language-text\">n</code> is a <strong>multiple of 5 <em>but not</em> 3</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">n <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></code></pre></div>\n</li>\n<li>\n<p>Print <strong>“FizzBuzz”</strong> when <code class=\"language-text\">n</code> is a <strong>multiple of both 5 <em>and</em> 3</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">n <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> n <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></code></pre></div>\n</li>\n</ol>\n<h3>Complete Solution</h3>\n<p>Based upon our understanding of the problem, we can create some test cases. This will validate our solution as we build it.</p>\n<h4>Test cases</h4>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">testThatFactorsOfThreeOutputFizz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fizz\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fizz\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fizz\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">testThatFactorsOfFiveOutputBuzz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Buzz\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Buzz\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Buzz\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">testThatFactorsOfFiveAndThreeOutputFizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"FizzBuzz\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"FizzBuzz\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">testThatNumbersThatAreNotFactorsOfThreeOrFiveOutputThemselves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"7\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">testMaxAndMinBoundaries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">XCTAssertEquals</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Buzz\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Implementation</h4>\n<p>Here is a solution to FizzBuzz in Swift.</p>\n<p>By returning a <code class=\"language-text\">String</code> from the <code class=\"language-text\">FizzBuzz(:)</code> function, rather than printing to console from within, the function becomes testable.  </p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"FizzBuzz\"</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Fizz\"</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Buzz\"</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>i<span class=\"token delimiter variable\">)</span></span>\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">100</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">FizzBuzz</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> </code></pre></div>","frontmatter":{"title":"FizzBuzz in Swift","date":null,"description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-07-01-FizzBuzz-in-Swift copy/","previous":null,"next":{"fields":{"slug":"/2016-07-01-FizzBuzz-in-Swift/"},"frontmatter":{"title":"FizzBuzz in Swift"}}}}}